/**
 * generated by Xtext 2.12.0
 */
package org.xtext.entites.entites.validation;

import java.util.HashSet;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.CollectionLiterals;
import org.xtext.entites.entites.entities.EntitiesPackage;
import org.xtext.entites.entites.entities.Entity;
import org.xtext.entites.entites.validation.AbstractEntitiesValidator;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class EntitiesValidator extends AbstractEntitiesValidator {
  public final static String ISSUE_CODE_PREFIX = "\tcom.xtext.entites.entites";
  
  public final static String INVALID_ENTITY_NAME = (EntitiesValidator.ISSUE_CODE_PREFIX + "invalidEntityName");
  
  @Check
  public void checkNoCycleInEntityHierarchy(final Entity entity) {
    Entity _superType = entity.getSuperType();
    boolean _tripleEquals = (_superType == null);
    if (_tripleEquals) {
      return;
    }
    final HashSet<Entity> visitedEntities = CollectionLiterals.<Entity>newHashSet(entity);
    Entity current = entity.getSuperType();
    while ((current != null)) {
      {
        boolean _contains = visitedEntities.contains(current);
        if (_contains) {
          String _name_id = current.getName_id();
          String _plus = ("cycle in hierarchy of entity \'" + _name_id);
          String _plus_1 = (_plus + "\'");
          this.error(_plus_1, 
            EntitiesPackage.eINSTANCE.getEntity_SuperType());
          return;
        }
        visitedEntities.add(current);
        current = current.getSuperType();
      }
    }
  }
  
  @Check
  public void checkEntityNameStartsWithCapital(final Entity entity) {
    boolean _isLowerCase = Character.isLowerCase(entity.getName_id().charAt(0));
    if (_isLowerCase) {
      this.warning("Entity should start with Capital letter", EntitiesPackage.eINSTANCE.getEntity_Name_id(), EntitiesValidator.INVALID_ENTITY_NAME, entity.getName_id());
    }
  }
}
